---

- name: install required package for docker
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: latest
    update_cache: yes

- name: check docker gpg
  shell: >
    apt-key fingerprint | grep 'Docker Release'
  args:
    warn: False
  register: check_docker_gpg
  changed_when: False
  failed_when: check_docker_gpg.rc not in [ 0, 1 ]

- name: install gpg
  shell: >
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  args:
    warn: False
  when: check_docker_gpg.rc != 0

- name: check docker repository
  shell: >
    grep download.docker.com /etc/apt/sources.list
  args:
    warn: False
  register: check_docker_repository
  changed_when: False
  failed_when: check_docker_repository.rc not in [ 0, 1 ]

- name: add docker-ce repository
  shell: >
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  when: check_docker_repository.rc != 0

- name: install docker-ce
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: yes
  notify: restart docker

- name: check /etc/docker/daemon.json
  stat:
    path: /etc/docker/daemon.json
  register: check_docker_daemon

- name: get name servers
  shell: cat /etc/resolv.conf | awk '/^nameserver/{ print $2 }'
  register: dns
  when: not check_docker_daemon.stat.exists

- name: copy /etc/docker/daemon.json
  template: >
    src=daemon.json.j2
    dest=/etc/docker/daemon.json
    owner=root
    group=root
    mode=0644
  notify: restart docker
  when: not check_docker_daemon.stat.exists
